/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Viewer__ = __webpack_require__(1);\n\n\nvar mousePos = {\n    x: null,\n    y: null,\n};\nvar me = \"je suis lÃ \";\nvar renderArea = document.getElementById('renderDiv');\nvar viewer = new __WEBPACK_IMPORTED_MODULE_0__Viewer__[\"a\" /* default */](renderArea);\nvar _idSelected;\n__WEBPACK_IMPORTED_MODULE_0__Viewer__[\"a\" /* default */].animate(viewer);\nconsole.log(viewer);\n\n/* ******************/\n/*  SOCKET VIEWER   */\n/* ******************/\n\nsocket.on(\"[viewer] ->  start chargement\", (id, name) => {\n    console.log(\"THE NODE \" + name + \" is loading ! id => \" + id);\n});\n\nsocket.on(\"[viewer] -> end chargement\", (id, name) => {\n    console.log(\"THE NODE \" + name + \" is charged ! id => \" + id);\n});\n\nsocket.on(\"[viewer] -> error chargement\", (id, name) => {\n    console.warn(\"THE NODE \" + name + \" could'nt be charged ! id => \" + id);\n});\n\nsocket.emit(\"start viewer\", workspaceId);\n\nsocket.on(\"addPart\", (file3d, nodeID, matrix, parentID) => {\n    console.log(\"addPart : \\n\", JSON.parse(file3d));\n    if (viewer)\n        viewer.addPart(JSON.parse(file3d), nodeID, matrix, parentID);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\nsocket.on(\"removePart\", (nodeID, parentID) => {\n    if (viewer)\n        viewer.removeAssembly(nodeID, parentID);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\n\nsocket.on(\"setAssembly\", (nodeID, parentID) => {\n    if (viewer)\n        viewer.setAssembly(nodeID, parentID);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\n\nsocket.on(\"addAssembly\", (nodeID, matrix, parentID) => {\n    if (viewer)\n        viewer.addAssembly(nodeID, matrix, parentID);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\nsocket.on(\"setMatrix\", (nodeId, matrix) => {\n    if (viewer)\n        viewer.setMatrix(nodeId, matrix);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\n\nsocket.on(\"removeAssembly\", (nodeID, parentID) => {\n    if (viewer)\n        viewer.removeAssembly(nodeID, parentID);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\nsocket.on(\"setPart\", (nodeID, parentID) => {\n    if (viewer)\n        viewer.setPart(nodeID, parentID);\n    else\n        console.warn(\"The viewer is not initialized\");\n});\n\n/* ************************************************************************** */\n/*                                                                            */\n/*                                   EVENTS                                   */\n/*                                                                            */\n/* ************************************************************************** */\n\nwindow.addEventListener('resize', onWindowResize, false);\n\nvar translate = $(\"#button-move-object\");\ntranslate.click(() => {\n    if (viewer instanceof __WEBPACK_IMPORTED_MODULE_0__Viewer__[\"a\" /* default */]) {\n        if (viewer.s_objControls.getMode() !== 'translate')\n            viewer.s_objControls.setMode(\"translate\");\n        else\n            viewer.toggleObjectControls();\n    } else console.warn(new Error(\"Viewer is not initialized\"));\n});\n\nvar rotate = $(\"#button-rotate-object\");\nrotate.click(() => {\n    if (viewer instanceof __WEBPACK_IMPORTED_MODULE_0__Viewer__[\"a\" /* default */]) {\n        if (viewer.s_objControls.getMode() !== 'rotate')\n            viewer.s_objControls.setMode(\"rotate\");\n        else\n            viewer.toggleObjectControls();\n    } else console.warn(new Error(\"Viewer is not initialized\"));\n});\n\n//var fitToScreen = $();\n\nvar fullScreen = $(\"#button-fullscreen\");\nfullScreen.click(() => {\n    if (viewer instanceof __WEBPACK_IMPORTED_MODULE_0__Viewer__[\"a\" /* default */]){\n        //FullSceen\n    } else console.warn(new Error(\"Viewer is not initialized\"));\n});\n\nvar wireframe = $(\"#button-wireframe\");\nwireframe.click(() => {\n    if (viewer)\n        viewer.toggleWireframe();\n    else console.warn(new Error(\"Viewer is not initialized\"));\n});\n\nvar passport3D = $('#button-passport-3d');\npassport3D.click(() => {\n    if(viewer instanceof __WEBPACK_IMPORTED_MODULE_0__Viewer__[\"a\" /* default */])\n        console.log(\"...\");\n    else console.warn(new Error(\"Viewer is not initialized\"));\n});\n\nvar save = $('#button-save');\nsave.click(() => {\n    viewer.save(socket);\n});\n\nvar cancel = $('#button-cancel');\ncancel.click(() => {\n    console.log(viewer.s_objControls)\n    viewer.s_objControls.reset();\n});\n\n$('body').on(\"click\", \".three-node\", (event) => {\n    var element = event.currentTarget;\n    var nodeId = element.id;\n    console.log(nodeId);\n    if (nodeId) {\n        viewer.select(nodeId);\n    }\n});\n\nrenderArea.addEventListener('mousemove', (event) => {\n    event.preventDefault();\n    var mouseX = event.offsetX,\n        mouseY = event.offsetY;\n        if(viewer)\n            viewer.checkIntersection(mouseX, mouseY);\n});\n\nrenderArea.addEventListener('touchmove', (event) => {\n    event.preventDefault();\n    var mouseX = event.offsetX,\n        mouseY = event.offsetY;\n\n    if (viewer)\n        viewer.checkIntersection(mouseX, mouseY);\n});\n\n/* *******************************/\n/*         EVENT FUNCTIONS       */\n/* *******************************/\n\n\nfunction onDocumentMouseMove(event) {\n    event.preventDefault();\n\n    mousePos.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mousePos.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n\n}\n\nfunction onWindowResize() {\n    if (viewer)\n        viewer.resize();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n");

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__init_scene_axis__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__init_Outline__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__loader_object3D__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_stats_js__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_stats_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_stats_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__worker_OutlineGeometry_worker__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__worker_OutlineGeometry_worker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4__worker_OutlineGeometry_worker__);\n\n\n\n\n\n\n/**\n* @description The Viewer integrated with THREE.JS\n* @author bocket.me\n* @param {HTMLElement} renderingDiv\n*/\nclass Viewer {\n    constructor(renderArea) {\n        if (renderArea ==  null)\n        throw new Error(\"Render Area : Not Found\");\n\n        /******************************************************************/\n        /* Stats Initialization */\n        //this.stats = new Stats();\n        //this.stats.showPanel(0);\n        //renderArea.appendChild(this.stats.dom);\n\n        /******************************************************************/\n        /* renderArea Information */\n\n        var p_width = renderArea.offsetWidth,\n        p_height = renderArea.offsetHeight,\n        p_axisSize = p_height * 0.15,\n        p_aspectRatio = renderArea.clientWidth / renderArea.clientHeight;\n\n        /******************************************************************/\n        /* Initialization of scenes */\n        this.p_scene = new THREE.Scene();\n\n        /* The Group of the object */\n        this.s_objects = new THREE.Group();\n        this.s_objects.name = workspaceId;\n        this.p_scene.add(this.s_objects);\n\n        /* The group of the lights */\n        this.s_lights = new THREE.Group();\n        this.s_lights.name = \"lights\";\n        this.p_scene.add(this.s_lights);\n\n        /* The render */\n        this.p_renderer = new THREE.WebGLRenderer({ canvas: renderSurface, alpha: true, antialias: true, logarithmicDepthBuffer: true });\n        this.p_renderer.localClippingEnabled = true;\n        this.p_renderer.setClearColor(0x7c7f84);\n        this.p_renderer.setSize(p_width, p_height);\n        this.p_renderer.shadowMap = true;\n        renderArea.appendChild(this.p_renderer.domElement);\n\n        /* The axis case */\n        this.p_axis = new __WEBPACK_IMPORTED_MODULE_0__init_scene_axis__[\"a\" /* default */](p_axisSize);\n\n        /* The camera */\n        this.p_camera = new THREE.PerspectiveCamera(60, p_aspectRatio, 1, 2147483647);\n        this.p_camera.up.set(0, 0, 1);\n        this.p_camera.position.set(0, -75, 50);\n\n        /* The floor of the scene */\n        //this.p_floor =  new Floor();\n        //this.p_scene.add(this.p_floor.mesh);\n\n        /* The Fog of the scene */\n        this.p_scene.fog = new THREE.Fog(0x525252);\n\n        /* The camera's controllers */\n        this.p_controls = new THREE.OrbitControls(this.p_camera, this.p_renderer.domElement);\n        this.p_controls.zoomSpeed = 1 / (Math.log10(this.p_camera.position.distanceTo(this.p_controls.target)));\n\n        /* The object's controllers */\n        this.s_objControls = new THREE.TransformControls(this.p_camera, this.p_renderer.domElement);\n        this.s_objControls.name = \"Object control\";\n        this.s_objControls.visible = false;\n        this.p_scene.add(this.s_objControls);\n\n        /* The box of the selected object */\n        this.s_box = new THREE.BoxHelper(this.s_objects, 0x262626);\n        this.s_box.material.linewidth = 6;\n        //this.s_box.visible = false;\n        this.p_scene.add(this.s_box);\n\n        this.p_raycaster = new THREE.Raycaster();\n\n        this.domElement = renderArea;\n\n\n        this.edges = new __WEBPACK_IMPORTED_MODULE_4__worker_OutlineGeometry_worker___default.a();\n        this.edges.onmessage = (err, mesh, outline, log) => {\n            if (log)\n            console.log(log);\n            if (err)\n            console.warn(err);\n            else\n            mesh.add(outline);\n        };\n\n        this.outline = new __WEBPACK_IMPORTED_MODULE_1__init_Outline__[\"a\" /* default */](\"rgb(0, 255, 194)\");\n\n        /* Add the lights to the scene */\n        this.lightsScene();\n    }\n\n    /**\n    * @description The animation of the viewer\n    * @static\n    * @param {Viewer} viewer\n    * @memberof Viewer\n    */\n    static animate(viewer) {\n        function animation() {\n            //viewer.stats.begin();\n\n            /*\n            if(viewer.s_objControls.object){\n                if (!viewer.s_objControls.object.boundingBox)\n                viewer.s_objControls.object.geometry.computeBoundingBox();\n\n                var object_center = viewer.s_objControls.object.geometry.boundingBox.max.clone().add(viewer.s_objControls.object.geometry.boundingBox.min).multiplyScalar(1/2);\n                var direction = object_center.clone().negate();\n                var distance = direction.length();\n\n                direction.normalize();\n                viewer.s_objControls.object.translateOnAxis(direction, -distance);\n            }\n            */\n\n            //viewer.p_floor.update(viewer.p_camera.position);\n            viewer.s_objects.updateMatrix();\n            viewer.p_controls.update();\n            viewer.s_objControls.update();\n            viewer.s_box.update();\n            viewer.p_axis.update(viewer.p_camera.position);\n            viewer.p_renderer.render(viewer.p_scene, viewer.p_camera);\n            viewer.outline.updatePosition(viewer.p_scene);\n            //viewer.stats.end();\n\n            requestAnimationFrame(animation);\n        }\n        animation();\n    }\n\n    /**\n    *\n    * @description Initialize the lights of the scene.\n    * @memberof Viewer\n    */\n    lightsScene() {\n        var ambientLight = new THREE.AmbientLight(0xffffff, 0.25),\n\n        directLight1 = new THREE.DirectionalLight(0xf5f5f5, 0.25),\n        directLight2 = new THREE.DirectionalLight(0xf5f5f5, 0.25),\n        directLight3 = new THREE.DirectionalLight(0xf5f5f5, 0.25),\n        directLight4 = new THREE.DirectionalLight(0xf5f5f5, 0.25),\n        directLight5 = new THREE.DirectionalLight(0xf5f5f5, 0.25);\n\n        directLight1.position.set(-1000,     0, 0);\n        directLight2.position.set( 1000,     0, 0);\n        directLight3.position.set(    0, -1000, 0);\n        directLight4.position.set(    0, -1000, 1000);\n        directLight5.position.set(    0,  1000, 1000);\n\n        this.s_lights.add(ambientLight);\n        this.s_lights.add(directLight1);\n        this.s_lights.add(directLight2);\n        this.s_lights.add(directLight3);\n        this.s_lights.add(directLight4);\n        this.s_lights.add(directLight5);\n\n        /*\n        var cameraHelper1 = new THREE.DirectionalLightHelper(directLight1, 5),\n        cameraHelper2 = new THREE.DirectionalLightHelper(directLight2, 5),\n        cameraHelper3 = new THREE.DirectionalLightHelper(directLight3, 5),\n        cameraHelper4 = new THREE.DirectionalLightHelper(directLight4, 5),\n        cameraHelper5 = new THREE.DirectionalLightHelper(directLight5, 5);\n\n\n        this.s_lights.add(cameraHelper1);\n        this.s_lights.add(cameraHelper2);\n        this.s_lights.add(cameraHelper3);\n        this.s_lights.add(cameraHelper4);\n        this.s_lights.add(cameraHelper5);\n        */\n    }\n\n    /* ************************************************************************** */\n    /*                                                                            */\n    /*                          SCREEN MODIFICATIONS                              */\n    /*                                                                            */\n    /* ************************************************************************** */\n\n    /**\n    * @description [Event Function] Returns the THREE.Group directly related to the object clicked on screen\n    * @param {number} mouseX offsetX value of the mouse event\n    * @param {number} mouseY offsetY value of the mouse event\n    * @memberof Viewer\n    */\n    fitToScreen() {\n        this.s_box.geometry.computeBoundingBox();\n        let center = this.s_box.geometry.boundingSphere.center;\n        let box = this.s_box.geometry.boundingBox;\n\n        this.p_camera.position.set(\n            center.x,\n            center.y + 3 * (box.min.y - box.max.y),\n            center.z\n        );\n\n        this.p_camera.lookAt(center);\n        this.p_controls.target = center;\n    }\n\n    /**\n     * The coordinate of the helper point\n     * @param {number} x - The coordinate x\n     * @param {number} y - The coordinate y\n     * @param {number} z - The coordinate z\n     */\n    lightHelper(x, y, z){\n        let pointLight = new THREE.PointLight( 0x4d0000, 1, 100 );\n        pointLight.position.set( x, y, z );\n        this.p_scene.add( pointLight );\n\n        let sphereSize = 1;\n        let pointLightHelper = new THREE.PointLightHelper( pointLight, sphereSize );\n        this.p_scene.add( pointLightHelper );\n        console.log(this.p_scene);\n    }\n\n    resize() {\n        this.p_camera.aspect = (this.domElement.clientWidth) / (this.domElement.clientHeight);\n        this.p_renderer.setSize((this.domElement.offsetWidth), (this.domElement.offsetHeight));\n        this.p_camera.updateProjectionMatrix();\n    }\n\n    /* ************************************************************************** */\n    /*                                                                            */\n    /*                                  RAYS                                      */\n    /*                                                                            */\n    /* ************************************************************************** */\n\n    /**\n    * @description [Event Function] Returns the object clicked on screen\n    * @param {number} mouseX offsetX value of the mouse event\n    * @param {number} mouseY offsetY value of the mouse event\n    */\n    rayToObject(mouseX, mouseY) {\n        var mouse3D = new THREE.Vector3((mouseX / this.domElement.clientWidth) * 2 - 1, -(mouseY / this.domElement.clientHeight) * 2 + 1, 0.5),\n        raycaster = new THREE.Raycaster(),\n        intersects = [];\n\n        raycaster.setFromCamera(mouse3D, this.p_camera);\n        intersects = raycaster.intersectObject(this.s_objects, true);\n\n        if (intersects.length > 0) {\n            delete intersects[0].face;\n            delete intersects[0].faceIndex;\n            delete intersects[0].index;\n\n            return intersects[0];\n        } else\n        return (null);\n    }\n\n    /**\n    * @description [Event Function] Returns the THREE.Group directly related to the object clicked on screen\n    * @param {number} mouseX offsetX value of the mouse event\n    * @param {number} mouseY offsetY value of the mouse event\n    */\n    rayToGroup(mouseX, mouseY) {\n        var mouse3D = new THREE.Vector3((mouseX / this.domElement.clientWidth) * 2 - 1, -(mouseY / this.domElement.clientHeight) * 2 + 1, 0.5),\n        raycaster = new THREE.Raycaster(),\n        intersects = [];\n\n        raycaster.setFromCamera(mouse3D, this.p_camera);\n        intersects = raycaster.intersectObject(this.scenes[0].children[5], true);\n\n        if (intersects.length > 0) {\n            delete intersects[0].face;\n            delete intersects[0].faceIndex;\n            delete intersects[0].index;\n            intersects[0].object = intersects[0].object.parent;\n\n            return intersects[0];\n        } else\n        return (null);\n    }\n\n    /**\n    * @description [Event Function] Returns the highest THREE.Group related to the object clicked on screen\n    * @param {number} mouseX offsetX value of the mouse event\n    * @param {number} mouseY offsetY value of the mouse event\n    */\n    rayToAssembly(mouseX, mouseY) {\n        var canvas = this.domElement;\n\n        var mouse3D = new THREE.Vector3((mouseX / canvas.clientWidth) * 2 - 1, -(mouseY / canvas.clientHeight) * 2 + 1, 0.5),\n        raycaster = new THREE.Raycaster(),\n        intersects = [];\n\n        var processIntersects = function(object) {\n            if (object.parent instanceof THREE.Group)\n            return processIntersects(object.parent);\n            else\n            return object;\n        };\n\n        raycaster.setFromCamera(mouse3D, this.p_camera);\n        intersects = raycaster.intersectObject(this.p_scene.children[5], true);\n\n        if (intersects.length > 0) {\n            delete intersects[0].face;\n            delete intersects[0].faceIndex;\n            delete intersects[0].index;\n            intersects[0].object = processIntersects(intersects[0].object);\n\n            return intersects[0];\n        } else\n        return (null);\n    }\n\n    checkIntersection(mouseX, mouseY){\n        var canvas  = this.domElement;\n        var mouse3D = new THREE.Vector3((mouseX / canvas.clientWidth) * 2 - 1, -(mouseY / canvas.clientHeight) * 2 + 1, 0.5);\n\n        this.p_raycaster.setFromCamera(mouse3D, this.p_camera);\n\n        var intersects = this.p_raycaster.intersectObject(this.s_objects, true);\n        if (intersects.length > 0){\n            var intersect = intersects[0].object;\n            var part = this.s_objects.getObjectByName(intersect.userData.partName);\n\n            if (this.outline.name == part.name) return;\n            this.outline.reset(this.p_scene);\n            this.outline.reset(this.p_scene);\n            this.outline.addObject(this.p_scene, part);\n        } else{\n            if (this.outline.mesh)\n            this.outline.reset(this.p_scene)\n        }\n    }\n\n    /* ************************************************************************** */\n    /*                                                                            */\n    /*                                  MATRIX                                    */\n    /*                                                                            */\n    /* ************************************************************************** */\n\n    /**\n    * @static\n    * @description Assemble a matrix4 from the position, rotation and scale components of an object and returns this matrix\n    * @param  {THREE.Vector3} pos Position vector of the object\n    * @param  {THREE.Euler} rot Euler angle of the object\n    * @param  {THREE.Vector3} scale Scale vector of the object\n    * @return {THREE.Matrix4}\n    */\n    static matrixCompose(pos, rot, scale) {\n        return new THREE.Matrix4().compose(pos, new THREE.Quaternion().setFromEuler(rot), scale);\n    }\n\n\n    /**\n    * @static\n    * @description Disassembles a matrix4 into its position, rotation and scale components and returns them in a JSON object\n    * @param {THREE.Matrix4} matrix\n    * @return {JSON}\n    */\n    static matrixDecompose(matrix) {\n        var pos = new THREE.Vector3(),\n        rot = new THREE.Quaternion(),\n        scale = new THREE.Vector3();\n\n        matrix.decompose(pos, rot, scale);\n\n        return { pos: pos, rot: new THREE.Euler().setFromQuaternion(rot), scale: scale };\n    }\n\n    /* ************************************************************************** */\n    /*                                                                            */\n    /*                                  OBJECT3D                                  */\n    /*                                                                            */\n    /* ************************************************************************** */\n    /**\n    * @description Add an assembly to a scene.\n    * @param {String} name - The name of the assembly\n    * @param {String} parentName - The parent name of the assembly\n    */\n    addAssembly(name, matrix, parentName) {\n        var scene = parentName == null ? this.s_objects : this.p_scene.getObjectByName(parentName);\n\n        var group = new THREE.Group();\n        group.applyMatrix(matrix[0]);\n        group.updateMatrix();\n        group.name = name;\n        group.userData = {\n            update: false,\n            data: 'assembly',\n            save:true,\n        };\n        scene.add(group);\n    }\n\n    /**\n    * @description Change the name of an assembly or a part.\n    * @param oldname\n    * @param newname\n    */\n    setPiece(oldname, newname) {\n        var piece = this.p_scene.getObjectByName(oldname);\n        if (piece instanceof THREE.Group)\n        piece.name = newname;\n        else if (piece instanceof THREE.Mesh)\n        piece.name = newname;\n        else\n        console.error(new Error(\"Could'nt find the name of the assembly\"))\n    }\n\n    /**\n    * @description Remove the Assembly of the\n    * @param name\n    */\n    removeAssembly(name) {\n        var assembly = this.p_scene.getObjectByName(name);\n\n        if (assembly instanceof THREE.Group)\n        this.p_scene.remove(assembly);\n        else\n        console.error(new Error('The assembly is not an instance of Group, but an instance of ', typeof(assembly)));\n    }\n\n    /**\n    * @description Add an assembly to a scene.\n    * @param {Object} file3D - The Object\n    * @param (String) file3D.name - The File name of the object\n    * @param (String) file3D.path - The path of the object\n    * @param (String) file3D.path - The path of the object\n    * @param (Array) file3D.geometry - The geometry of the object\n    * @param {THREE.Matrix4} matrix - The Matrix\n    * @param {String} parentName - The parent name of the assembly\n    */\n    addPart(file3D, nodeID, matrix, parentName) {\n        var scene = parentName == null ? this.s_objects : this.p_scene.getObjectByName(parentName);\n\n        if(!file3D){\n            /**A remplacer **/\n            var geometry = new THREE.BoxGeometry(50, 50, 50);\n            var material = new THREE.MeshLambertMaterial({ color: 0x809fff });\n            var mesh = new THREE.Mesh( geometry, material );\n            /**A remplacer **/\n        } else\n        var mesh = Object(__WEBPACK_IMPORTED_MODULE_2__loader_object3D__[\"a\" /* default */])(nodeID, file3D);\n\n        mesh.name = nodeID;\n        mesh.applyMatrix(matrix[0]);\n        mesh.updateMatrix();\n        mesh.matrixAutoUpdate = true;\n        mesh.userData = {\n            update: false,\n            data: 'mesh',\n            selectable: true,\n            save:true,\n        };\n        mesh.traverse(sub_mesh => {\n            if (sub_mesh instanceof THREE.Mesh){\n                sub_mesh.material.transparent = true;\n                sub_mesh.receiveShadow = true;\n                sub_mesh.renderOrder = -1;\n                //this.edges.postMessage({mesh});\n            }\n        });\n\n        scene.add(mesh);\n    }\n\n    /**\n    * @description Remove a part of the assembly\n    * @param name - The name of the\n    */\n    removePart(name) {\n        var part = this.p_scene.getObjectByName(name);\n\n        if (part instanceof THREE.Mesh)\n        this.p_scene.remove(part);\n        else\n        console.error(new Error('The part is not an instance of Mesh, but an instance of ', typeof(part)));\n    }\n\n    /**\n    * @description Select The Object\n    * @param name - The name of the Group or the Mesh\n    */\n    select(name) {\n        var piece = this.p_scene.getObjectByName(name);\n\n        /*****************************************/\n        /*Reset the wireframe*/\n        this.p_scene.traverse(object3d => {\n            if (object3d instanceof THREE.Mesh) {\n                if (object3d.material.wireframe)\n                object3d.material.wireframe = false;\n            }\n        });\n\n        /*****************************************/\n        /*Set up of the object Control*/\n        if (this.s_objControls.visible){\n            if (piece !== this.s_objControls){\n                this.s_objControls.detach(this.s_objControls);\n                this.s_objControls.attach(piece);\n            }\n        }\n\n        /*****************************************/\n        /*Get selected object*/\n        if (piece)\n        this.s_objectSelected = piece;\n\n        this.s_box.setFromObject(this.s_objectSelected);\n\n        if (piece instanceof THREE.Mesh){\n            this.s_objects.traverse((object3d) => {\n                if(object3d instanceof THREE.Mesh){\n                    if(object3d.name !== piece.name) {\n                        object3d.material.opacity = 0.3;\n                    } else {\n                        object3d.material.opacity = 1;\n                    }\n                }\n            })\n        } else if (piece instanceof THREE.Group){\n            this.s_objects.traverse((object3d) => {\n                if(object3d instanceof THREE.Mesh) {\n                    if (object3d.name !== piece.name){\n                        object3d.material.opacity = 0.3;\n                    }\n                }\n            });\n            piece.traverse(object3d => {\n                if(object3d instanceof THREE.Mesh) {\n                    if (object3d.name !== piece.name){\n                        object3d.material.opacity = 1;\n                    }\n                }\n            })\n        }\n        /*****************************************/\n        /* Outline the object */\n        this.fitToScreen();\n\n        this.p_camera.updateProjectionMatrix();\n    }\n\n    /**\n    * @description Toggle the wireframe of the selected object.\n    */\n    toggleWireframe(){\n        if (this.s_objectSelected) {\n            if (this.s_objectSelected instanceof THREE.Mesh) {\n                if (this.s_objectSelected.material.wireframe)\n                this.s_objectSelected.material.wireframe = false;\n                else\n                this.s_objectSelected.material.wireframe = true;\n            }\n            else if (this.s_objectSelected instanceof THREE.Group) {\n                this.s_objectSelected.traverse((object) => {\n                    if (object instanceof THREE.Mesh) {\n                        if (object.material.wireframe)\n                        object.material.wireframe = false;\n                        else\n                        object.material.wireframe = true;\n                    }\n                });\n            }\n        } else {\n            Materialize.toast('You must select a node', 2000);\n        }\n    }\n\n    toggleObjectControls(){\n        if(this.s_objControls.visible){\n            this.s_objControls.detach(this.s_objectSelected);\n            this.s_objControls.visible = false;\n        }else{\n            this.s_objControls.attach(this.s_objectSelected);\n            this.s_objControls.visible = true;\n        }\n    }\n\n    /***\n    * @description Send a socket to save the position of all the modified part. (v1)\n    * @param socket\n    */\n    save(socket){\n        this.s_objects.traverse(object3D => {\n            if (object3D instanceof THREE.Group && object3D.userData.data)\n            socket.emit(\"[OBJECT 3D] - save\", workspaceId, object3D.name, object3D.matrix);\n        });\n    }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Viewer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n");

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("class AxisScene{\n    constructor(p_axisSize){\n        this.p_scene = new THREE.Scene();\n\n        this.p_renderer = new THREE.WebGLRenderer({canvas: axisCanvas, alpha: true, antialias: true, logarithmicDepthBuffer: true});\n        this.p_renderer.setSize(p_axisSize, p_axisSize);\n\n        this.p_camera = new THREE.OrthographicCamera(p_axisSize / -2, p_axisSize / 2, p_axisSize / 2, p_axisSize / -2, 1, 2147483647);\n        this.p_camera.lookAt(this.p_scene);\n\n        this.p_controls = new THREE.OrbitControls(this.p_camera, this.p_renderer.domElement);\n        this.p_controls.rotateSpeed = 0.15;\n    }\n\n    update(data){\n        this.p_camera.position.copy(data);\n        this.p_camera.position.setLength(200);\n        this.p_camera.lookAt(this.p_scene.position);\n    }\n\n    initScene(renderArea){\n        var axisAnchor = new THREE.Points();\n        axisAnchor.position.set(0, 0, 0);\n\n        var p_axis = new THREE.TransformControls(this.p_camera, this.p_renderer.domElement);\n        p_axis.children[0].children[0].children.splice(6, 4);\n        p_axis.dispose();\n        p_axis.attach(axisAnchor);\n\n        this.p_scene.add(axisAnchor);\n        this.p_scene.add(p_axis);\n\n        renderArea.appendChild(this.p_renderer.domElement);\n    }\n\n    render() {\n        this.p_renderer.render(this.p_scene, this.p_camera);\n    }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = AxisScene;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2luaXQvc2NlbmVfYXhpcy5qcz9iMDkzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQSxtREFBbUQsK0VBQStFO0FBQ2xJOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBBeGlzU2NlbmV7XG4gICAgY29uc3RydWN0b3IocF9heGlzU2l6ZSl7XG4gICAgICAgIHRoaXMucF9zY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xuXG4gICAgICAgIHRoaXMucF9yZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHtjYW52YXM6IGF4aXNDYW52YXMsIGFscGhhOiB0cnVlLCBhbnRpYWxpYXM6IHRydWUsIGxvZ2FyaXRobWljRGVwdGhCdWZmZXI6IHRydWV9KTtcbiAgICAgICAgdGhpcy5wX3JlbmRlcmVyLnNldFNpemUocF9heGlzU2l6ZSwgcF9heGlzU2l6ZSk7XG5cbiAgICAgICAgdGhpcy5wX2NhbWVyYSA9IG5ldyBUSFJFRS5PcnRob2dyYXBoaWNDYW1lcmEocF9heGlzU2l6ZSAvIC0yLCBwX2F4aXNTaXplIC8gMiwgcF9heGlzU2l6ZSAvIDIsIHBfYXhpc1NpemUgLyAtMiwgMSwgMjE0NzQ4MzY0Nyk7XG4gICAgICAgIHRoaXMucF9jYW1lcmEubG9va0F0KHRoaXMucF9zY2VuZSk7XG5cbiAgICAgICAgdGhpcy5wX2NvbnRyb2xzID0gbmV3IFRIUkVFLk9yYml0Q29udHJvbHModGhpcy5wX2NhbWVyYSwgdGhpcy5wX3JlbmRlcmVyLmRvbUVsZW1lbnQpO1xuICAgICAgICB0aGlzLnBfY29udHJvbHMucm90YXRlU3BlZWQgPSAwLjE1O1xuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhKXtcbiAgICAgICAgdGhpcy5wX2NhbWVyYS5wb3NpdGlvbi5jb3B5KGRhdGEpO1xuICAgICAgICB0aGlzLnBfY2FtZXJhLnBvc2l0aW9uLnNldExlbmd0aCgyMDApO1xuICAgICAgICB0aGlzLnBfY2FtZXJhLmxvb2tBdCh0aGlzLnBfc2NlbmUucG9zaXRpb24pO1xuICAgIH1cblxuICAgIGluaXRTY2VuZShyZW5kZXJBcmVhKXtcbiAgICAgICAgdmFyIGF4aXNBbmNob3IgPSBuZXcgVEhSRUUuUG9pbnRzKCk7XG4gICAgICAgIGF4aXNBbmNob3IucG9zaXRpb24uc2V0KDAsIDAsIDApO1xuXG4gICAgICAgIHZhciBwX2F4aXMgPSBuZXcgVEhSRUUuVHJhbnNmb3JtQ29udHJvbHModGhpcy5wX2NhbWVyYSwgdGhpcy5wX3JlbmRlcmVyLmRvbUVsZW1lbnQpO1xuICAgICAgICBwX2F4aXMuY2hpbGRyZW5bMF0uY2hpbGRyZW5bMF0uY2hpbGRyZW4uc3BsaWNlKDYsIDQpO1xuICAgICAgICBwX2F4aXMuZGlzcG9zZSgpO1xuICAgICAgICBwX2F4aXMuYXR0YWNoKGF4aXNBbmNob3IpO1xuXG4gICAgICAgIHRoaXMucF9zY2VuZS5hZGQoYXhpc0FuY2hvcik7XG4gICAgICAgIHRoaXMucF9zY2VuZS5hZGQocF9heGlzKTtcblxuICAgICAgICByZW5kZXJBcmVhLmFwcGVuZENoaWxkKHRoaXMucF9yZW5kZXJlci5kb21FbGVtZW50KTtcbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHRoaXMucF9yZW5kZXJlci5yZW5kZXIodGhpcy5wX3NjZW5lLCB0aGlzLnBfY2FtZXJhKTtcbiAgICB9XG59XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2luaXQvc2NlbmVfYXhpcy5qc1xuLy8gbW9kdWxlIGlkID0gMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n");

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("class Outline {\n    constructor(color){\n        this.material = new THREE.MeshBasicMaterial( { color: color, side: THREE.BackSide } );\n        this.name = null;\n        this.resetopacity = false;\n        this.mesh = new THREE.Group();\n    }\n\n    reset(scene){\n        if (this.resetopacity){\n            //Reset the opacity\n            var object = scene.getObjectByName(this.name),\n                i = 0;\n            object.traverse(obj => {\n                if (obj instanceof THREE.Mesh){\n                    obj.material.opacity = 0.3;\n                    i++;\n                }\n            });\n            this.resetopacity = false;\n        }\n        this.name = null;\n        scene.remove(this.mesh);\n        delete this.mesh;\n        this.mesh = new THREE.Group();\n    }\n\n    updatePosition(scene){\n        if (this.mesh.name){\n            var object = scene.getObjectByName(this.name);\n            this.mesh.position.copy(object.getWorldPosition());\n            this.mesh.quaternion.copy(object.getWorldQuaternion());\n        }\n    }\n\n    addObject(scene, object){\n        this.name = object.name;\n        this.mesh.copy(object, true);\n        this.mesh.traverse(obj => {\n            if(THREE.Mesh){\n                obj.material = this.material;\n            }\n        });\n        this.mesh.position.copy(object.getWorldPosition());\n        this.mesh.quaternion.copy(object.getWorldQuaternion());\n        this.mesh.scale.multiplyScalar(1.05);\n\n        object.traverse(obj => {\n            if (object instanceof THREE.Mesh){\n                if (obj.material.opacity !== 1) {\n                    obj.material.opacity = 1;\n                    this.resetopacity = true;\n                }\n            }\n        });\n        scene.add(this.mesh);\n    }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Outline;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2luaXQvT3V0bGluZS5qcz80NjRjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxzREFBc0QscUNBQXFDO0FBQzNGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsQyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgT3V0bGluZSB7XG4gICAgY29uc3RydWN0b3IoY29sb3Ipe1xuICAgICAgICB0aGlzLm1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKCB7IGNvbG9yOiBjb2xvciwgc2lkZTogVEhSRUUuQmFja1NpZGUgfSApO1xuICAgICAgICB0aGlzLm5hbWUgPSBudWxsO1xuICAgICAgICB0aGlzLnJlc2V0b3BhY2l0eSA9IGZhbHNlO1xuICAgICAgICB0aGlzLm1lc2ggPSBuZXcgVEhSRUUuR3JvdXAoKTtcbiAgICB9XG5cbiAgICByZXNldChzY2VuZSl7XG4gICAgICAgIGlmICh0aGlzLnJlc2V0b3BhY2l0eSl7XG4gICAgICAgICAgICAvL1Jlc2V0IHRoZSBvcGFjaXR5XG4gICAgICAgICAgICB2YXIgb2JqZWN0ID0gc2NlbmUuZ2V0T2JqZWN0QnlOYW1lKHRoaXMubmFtZSksXG4gICAgICAgICAgICAgICAgaSA9IDA7XG4gICAgICAgICAgICBvYmplY3QudHJhdmVyc2Uob2JqID0+IHtcbiAgICAgICAgICAgICAgICBpZiAob2JqIGluc3RhbmNlb2YgVEhSRUUuTWVzaCl7XG4gICAgICAgICAgICAgICAgICAgIG9iai5tYXRlcmlhbC5vcGFjaXR5ID0gMC4zO1xuICAgICAgICAgICAgICAgICAgICBpKys7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnJlc2V0b3BhY2l0eSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubmFtZSA9IG51bGw7XG4gICAgICAgIHNjZW5lLnJlbW92ZSh0aGlzLm1lc2gpO1xuICAgICAgICBkZWxldGUgdGhpcy5tZXNoO1xuICAgICAgICB0aGlzLm1lc2ggPSBuZXcgVEhSRUUuR3JvdXAoKTtcbiAgICB9XG5cbiAgICB1cGRhdGVQb3NpdGlvbihzY2VuZSl7XG4gICAgICAgIGlmICh0aGlzLm1lc2gubmFtZSl7XG4gICAgICAgICAgICB2YXIgb2JqZWN0ID0gc2NlbmUuZ2V0T2JqZWN0QnlOYW1lKHRoaXMubmFtZSk7XG4gICAgICAgICAgICB0aGlzLm1lc2gucG9zaXRpb24uY29weShvYmplY3QuZ2V0V29ybGRQb3NpdGlvbigpKTtcbiAgICAgICAgICAgIHRoaXMubWVzaC5xdWF0ZXJuaW9uLmNvcHkob2JqZWN0LmdldFdvcmxkUXVhdGVybmlvbigpKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZE9iamVjdChzY2VuZSwgb2JqZWN0KXtcbiAgICAgICAgdGhpcy5uYW1lID0gb2JqZWN0Lm5hbWU7XG4gICAgICAgIHRoaXMubWVzaC5jb3B5KG9iamVjdCwgdHJ1ZSk7XG4gICAgICAgIHRoaXMubWVzaC50cmF2ZXJzZShvYmogPT4ge1xuICAgICAgICAgICAgaWYoVEhSRUUuTWVzaCl7XG4gICAgICAgICAgICAgICAgb2JqLm1hdGVyaWFsID0gdGhpcy5tYXRlcmlhbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubWVzaC5wb3NpdGlvbi5jb3B5KG9iamVjdC5nZXRXb3JsZFBvc2l0aW9uKCkpO1xuICAgICAgICB0aGlzLm1lc2gucXVhdGVybmlvbi5jb3B5KG9iamVjdC5nZXRXb3JsZFF1YXRlcm5pb24oKSk7XG4gICAgICAgIHRoaXMubWVzaC5zY2FsZS5tdWx0aXBseVNjYWxhcigxLjA1KTtcblxuICAgICAgICBvYmplY3QudHJhdmVyc2Uob2JqID0+IHtcbiAgICAgICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBUSFJFRS5NZXNoKXtcbiAgICAgICAgICAgICAgICBpZiAob2JqLm1hdGVyaWFsLm9wYWNpdHkgIT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqLm1hdGVyaWFsLm9wYWNpdHkgPSAxO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlc2V0b3BhY2l0eSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgc2NlbmUuYWRkKHRoaXMubWVzaCk7XG4gICAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vdmlld2VyL3NyYy90aHJlZS5qcyAtIHZpZXdlci9pbml0L091dGxpbmUuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n");

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = object3D;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Assimp2json__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assimp2json_worker__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__assimp2json_worker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__assimp2json_worker__);\n\n\n\nfunction object3D (nodeID, file3D) {\n    return Object(__WEBPACK_IMPORTED_MODULE_0__Assimp2json__[\"a\" /* default */])(nodeID, file3D);\n}\n\nvar loadObjectFromOBJ = function (name, obj, mtl) {\n    var objLoader = new THREE.OBJLoader();\n\n    var object;\n\n    if (data.mtl)\n        objLoader.setMaterials(new THREE.MTLLoader().parse(mtl));\n    if (data.obj){\n        geometry = objLoader.parse(obj);\n        geometry.name = name;\n        new Promise((resolve) => {\n            geometry.traverse(function (child) {\n                if (child.hasOwnProperty('geometry'))\n                    child.geometry.computeBoundingBox();\n            });\n            resolve();\n        }).then();\n        return geometry;\n    }\n};\n\nvar loadObjectFromJSON = function (jsonObj, colors) {\n\n    var geometry = new THREE.BufferGeometry();\n    // create a simple square shape. We duplicate the top left and bottom right\n    // vertices because each vertex needs to appear once per triangle.\n\n    // itemSize = 3 because there are 3 values (components) per vertex\n    geometry.addAttribute( 'position', new THREE.Float32BufferAttribute(jsonObj.geometry, 3));\n    geometry.computeBoundingSphere();\n    geometry.computeBoundingBox();\n    geometry.computeFaceNormals();\n    geometry.computeVertexNormals();\n\n    var material = new THREE.MeshBasicMaterial( { color: colors } );\n    var mesh = new THREE.Mesh( geometry, material );\n\n    return mesh;\n\n    /* var geometry = new THREE.BufferGeometry();\n     geometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\n     var material = new THREE.MeshBasicMaterial( { color: colors } );\n     var mesh = new THREE.Mesh( geometry, material );\n     scene.add(mesh);*/\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2xvYWRlci9vYmplY3QzRC5qcz9jYjk2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpREFBaUQsZ0JBQWdCO0FBQ2pFOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxrREFBa0QsZ0JBQWdCO0FBQ2xFO0FBQ0EscUJBQXFCO0FBQ3JCIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9hZE9iamVjdEZyb21KU09OQXNzaW1wIGZyb20gJy4vQXNzaW1wMmpzb24nO1xuaW1wb3J0IGxvYWRlciBmcm9tICcuL2Fzc2ltcDJqc29uLndvcmtlcidcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb2JqZWN0M0QgKG5vZGVJRCwgZmlsZTNEKSB7XG4gICAgcmV0dXJuIGxvYWRPYmplY3RGcm9tSlNPTkFzc2ltcChub2RlSUQsIGZpbGUzRCk7XG59XG5cbnZhciBsb2FkT2JqZWN0RnJvbU9CSiA9IGZ1bmN0aW9uIChuYW1lLCBvYmosIG10bCkge1xuICAgIHZhciBvYmpMb2FkZXIgPSBuZXcgVEhSRUUuT0JKTG9hZGVyKCk7XG5cbiAgICB2YXIgb2JqZWN0O1xuXG4gICAgaWYgKGRhdGEubXRsKVxuICAgICAgICBvYmpMb2FkZXIuc2V0TWF0ZXJpYWxzKG5ldyBUSFJFRS5NVExMb2FkZXIoKS5wYXJzZShtdGwpKTtcbiAgICBpZiAoZGF0YS5vYmope1xuICAgICAgICBnZW9tZXRyeSA9IG9iakxvYWRlci5wYXJzZShvYmopO1xuICAgICAgICBnZW9tZXRyeS5uYW1lID0gbmFtZTtcbiAgICAgICAgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgIGdlb21ldHJ5LnRyYXZlcnNlKGZ1bmN0aW9uIChjaGlsZCkge1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZC5oYXNPd25Qcm9wZXJ0eSgnZ2VvbWV0cnknKSlcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQuZ2VvbWV0cnkuY29tcHV0ZUJvdW5kaW5nQm94KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfSkudGhlbigpO1xuICAgICAgICByZXR1cm4gZ2VvbWV0cnk7XG4gICAgfVxufTtcblxudmFyIGxvYWRPYmplY3RGcm9tSlNPTiA9IGZ1bmN0aW9uIChqc29uT2JqLCBjb2xvcnMpIHtcblxuICAgIHZhciBnZW9tZXRyeSA9IG5ldyBUSFJFRS5CdWZmZXJHZW9tZXRyeSgpO1xuICAgIC8vIGNyZWF0ZSBhIHNpbXBsZSBzcXVhcmUgc2hhcGUuIFdlIGR1cGxpY2F0ZSB0aGUgdG9wIGxlZnQgYW5kIGJvdHRvbSByaWdodFxuICAgIC8vIHZlcnRpY2VzIGJlY2F1c2UgZWFjaCB2ZXJ0ZXggbmVlZHMgdG8gYXBwZWFyIG9uY2UgcGVyIHRyaWFuZ2xlLlxuXG4gICAgLy8gaXRlbVNpemUgPSAzIGJlY2F1c2UgdGhlcmUgYXJlIDMgdmFsdWVzIChjb21wb25lbnRzKSBwZXIgdmVydGV4XG4gICAgZ2VvbWV0cnkuYWRkQXR0cmlidXRlKCAncG9zaXRpb24nLCBuZXcgVEhSRUUuRmxvYXQzMkJ1ZmZlckF0dHJpYnV0ZShqc29uT2JqLmdlb21ldHJ5LCAzKSk7XG4gICAgZ2VvbWV0cnkuY29tcHV0ZUJvdW5kaW5nU3BoZXJlKCk7XG4gICAgZ2VvbWV0cnkuY29tcHV0ZUJvdW5kaW5nQm94KCk7XG4gICAgZ2VvbWV0cnkuY29tcHV0ZUZhY2VOb3JtYWxzKCk7XG4gICAgZ2VvbWV0cnkuY29tcHV0ZVZlcnRleE5vcm1hbHMoKTtcblxuICAgIHZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCggeyBjb2xvcjogY29sb3JzIH0gKTtcbiAgICB2YXIgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKCBnZW9tZXRyeSwgbWF0ZXJpYWwgKTtcblxuICAgIHJldHVybiBtZXNoO1xuXG4gICAgLyogdmFyIGdlb21ldHJ5ID0gbmV3IFRIUkVFLkJ1ZmZlckdlb21ldHJ5KCk7XG4gICAgIGdlb21ldHJ5LmFkZEF0dHJpYnV0ZSggJ3Bvc2l0aW9uJywgbmV3IFRIUkVFLkJ1ZmZlckF0dHJpYnV0ZSggdmVydGljZXMsIDMgKSApO1xuICAgICB2YXIgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoIHsgY29sb3I6IGNvbG9ycyB9ICk7XG4gICAgIHZhciBtZXNoID0gbmV3IFRIUkVFLk1lc2goIGdlb21ldHJ5LCBtYXRlcmlhbCApO1xuICAgICBzY2VuZS5hZGQobWVzaCk7Ki9cbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2xvYWRlci9vYmplY3QzRC5qc1xuLy8gbW9kdWxlIGlkID0gNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n");

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Assimp2json;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__init_OutlineGeometry__ = __webpack_require__(6);\n//import Worker from './assimp2json.worker';\n\n\nfunction Assimp2json(nodeID, json) {\n    function parseList(json, handler) {\n        let meshes = new Array(json.length);\n\n        for(let i = 0; i < json.length; ++ i){\n            meshes[ i ] = handler.call( this , json[ i ] );\n        }\n\n        return meshes;\n    }\n\n    function parseMesh( json ){\n        var geometry = new THREE.BufferGeometry();\n\n        var i, l, face;\n\n        var indices = [];\n\n        var vertices = json.vertices || [];\n        var normals = json.normals || [];\n        var uvs = json.texturecoords || [];\n        var colors = json.colors || [];\n\n        uvs = uvs[ 0 ] || []; // only support for a single set of uvs\n\n        for ( i = 0, l = json.faces.length; i < l; i ++ ) {\n\n            face = json.faces[ i ];\n            indices.push( face[ 0 ], face[ 1 ], face[ 2 ] );\n\n        }\n\n        geometry.setIndex( indices );\n        geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( vertices, 3 ) );\n\n        if ( normals.length > 0 )\n        geometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( normals, 3 ) );\n\n        if ( uvs.length > 0 )\n        geometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( uvs, 2 ) );\n\n        if ( colors.length > 0 )\n        geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( colors, 3 ) );\n\n        geometry.computeBoundingSphere();\n\n        return geometry;\n    }\n\n    function parseMaterial( json ) {\n\n        var material = new THREE.MeshPhongMaterial();\n\n        for ( var i in json.properties ) {\n\n            var property = json.properties[ i ];\n            var key = property.key;\n            var value = property.value;\n\n            switch ( key ) {\n\n                case '$tex.file': {\n\n                    var semantic = property.semantic;\n\n                    // prop.semantic gives the type of the texture\n                    // 1: diffuse\n                    // 2: specular mao\n                    // 5: height map (bumps)\n                    // 6: normal map\n                    // more values (i.e. emissive, environment) are known by assimp and may be relevant\n\n                    if ( semantic === 1 || semantic === 2 || semantic === 5 || semantic === 6 ) {\n\n                        var keyname;\n\n                        switch ( semantic ) {\n                            case 1:\n                            keyname = 'map';\n                            break;\n                            case 2:\n                            keyname = 'specularMap';\n                            break;\n                            case 5:\n                            keyname = 'bumpMap';\n                            break;\n                            case 6:\n                            keyname = 'normalMap';\n                            break;\n                        }\n\n                        var texture = textureLoader.load( value );\n\n                        // TODO: read texture settings from assimp.\n                        // Wrapping is the default, though.\n                        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n                        material[ keyname ] = texture;\n                    }\n                    break;\n                }\n\n                case '?mat.name':\n                material.name = value;\n                break;\n\n                case '$clr.diffuse':\n                material.color.fromArray( value );\n                break;\n\n                case '$clr.specular':\n                material.specular.fromArray( value );\n                break;\n\n                case '$clr.emissive':\n                material.emissive.fromArray( value );\n                break;\n\n                case '$mat.shininess':\n                material.shininess = value;\n                break;\n\n                case '$mat.shadingm':\n                // aiShadingMode_Flat\n                material.flatShading = ( value === 1 ) ? true : false;\n                break;\n\n                case '$mat.opacity':\n                if ( value < 1 ) {\n                    material.opacity = value;\n                    material.transparent = true;\n                }\n                break;\n\n            }\n\n        }\n\n        return material;\n\n    }\n\n    function parseObject( json, node, meshes, materials ) {\n\n        let obj = new THREE.Group();\n\n        //console.log(node.name, node);\n\n        if (node.meshes){\n\n            let idx =  node.meshes[ 0 ];\n            let mesh = new THREE.Mesh(meshes[ idx ], materials[ json.meshes[ idx ].materialindex ]);\n            mesh.userData.partName = nodeID;\n\n            var outlineMaterial1 = new THREE.MeshBasicMaterial( { color: 0xff0000, side: THREE.BackSide, wireframe: true } );\n            var outline = new THREE.Mesh(meshes[ idx ], outlineMaterial1 );\n\n            obj.add(mesh);\n            obj.add(outline);\n            /*\n            let edges = new Outline(mesh.geometry);\n            let line =  new THREE.LineSegments( edges, new THREE.LineBasicMaterial( { color: 0xffffff } ) );\n            obj.add(line);\n            */\n        } else if (node.children){\n            obj =  new THREE.Group();\n\n            for (let i = 0; node.children && i < node.children.length; i ++ ) {\n                obj.add( parseObject( json, node.children[ i ], meshes, materials ) );\n            }\n\n        } else console.warn('[ERROR FILE] The node has nor children or mesh');\n        obj.name = node.name || '';\n        obj.matrix = new THREE.Matrix4().fromArray( node.transformation ).transpose();\n        obj.matrix.decompose( obj.position, obj.quaternion, obj.scale );\n\n        return obj;\n    }\n\n    var meshes = parseList(json.meshes, parseMesh);\n    var materials = parseList(json.materials, parseMaterial);\n    return parseObject(json, json.rootnode, meshes, materials);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n");

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* unused harmony export default */\nfunction OutlineGeometry ( geometry, thresholdAngle ) {\n\n    let outline = THREE.BufferGeometry();\n\n    var thresholdDot = Math.cos( Math.PI / 180 * thresholdAngle );\n\n    var edge = [ 0, 0 ], hash = {}, i, j, l, face, key;\n\n    function sortFunction( a, b ) {\n\n        return a - b;\n\n    }\n\n    var keys = [ 'a', 'b', 'c' ];\n\n    var geometry2;\n\n    if ( geometry.isBufferGeometry ) {\n\n        geometry2 = new THREE.Geometry();\n        geometry2.fromBufferGeometry( geometry );\n\n    } else {\n\n        geometry2 = geometry.clone();\n\n    }\n\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n\n    var vertices = geometry2.vertices;\n    var faces = geometry2.faces;\n\n    for ( i = 0; i < faces.length; i ++ ) {\n\n        face = faces[ i ];\n\n        for ( j = 0; j < 3; j ++ ) {\n\n            edge[ 0 ] = face[ keys[ j ] ];\n            edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n\n            var line = new THREE.Line3(vertices[edge[ 0 ]], vertices[edge[ 1 ]]);\n\n            // for each vertex checks if it lies in the edge\n            for ( var e = vertices.length - 1; e >= 0; e -- ) {\n                if (e === edge[ 0 ] || e === edge[ 1 ]) continue;\n                var v = vertices[e];\n                var closestPoint = line.closestPointToPoint(v, true);\n                if ((new THREE.Line3(closestPoint, v)).distance() < 1e-5) { //1e-5\n                    // mark the current face as splitted so that his cords won't be considered\n                    face.splitted = true;\n                    // Add two new faces, created splitting the face in two\n                    faces.push(new THREE.Face3(\n                        e, face[ keys[ ( j + 2 ) % 3 ] ], face[ keys[ ( j ) % 3 ] ],\n                        face.normal, face.color, face.materialIndex\n                    ));\n                    faces.push(new THREE.Face3(\n                        e, face[ keys[ ( j + 2 ) % 3 ] ], face[ keys[ ( j + 1 ) % 3 ] ],\n                        face.normal, face.color, face.materialIndex\n                    ));\n                    break;\n                }\n            }\n            if (face.splitted) break;\n\n        }\n\n    }\n\n    for ( i = faces.length - 1;  i >= 0; i -- ) {\n\n        face = faces[ i ];\n\n        if (face.splitted) continue;\n\n        for ( j = 0; j < 3; j ++ ) {\n\n            edge[ 0 ] = face[ keys[ j ] ];\n            edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n            edge.sort( sortFunction );\n\n            key = edge.toString();\n\n            if ( hash[ key ] === undefined ) {\n\n                hash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n            } else {\n\n                hash[ key ].face2 = i;\n\n            }\n\n        }\n\n    }\n\n    var coords = [];\n\n    for ( key in hash ) {\n\n        var h = hash[ key ];\n\n        // An edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n        if ( h.face2 !== undefined && faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n            var vertex = vertices[ h.vert1 ];\n            coords.push( vertex.x );\n            coords.push( vertex.y );\n            coords.push( vertex.z );\n\n            vertex = vertices[ h.vert2 ];\n            coords.push( vertex.x );\n            coords.push( vertex.y );\n            coords.push( vertex.z );\n\n        }\n\n    }\n\n    outline.addAttribute( 'position', new THREE.Float32BufferAttribute( coords, 3 ) );\n    console.log(outline);\n    return outline\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2luaXQvT3V0bGluZUdlb21ldHJ5LmpzP2Y0NDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztBQUVBOztBQUVBOztBQUVBLGtDQUFrQzs7QUFFbEM7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQSxLQUFLOztBQUVMOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxnQkFBZ0Isa0JBQWtCOztBQUVsQzs7QUFFQSxvQkFBb0IsT0FBTzs7QUFFM0I7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLDhDQUE4QyxRQUFRO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsK0JBQStCLFNBQVM7O0FBRXhDOztBQUVBOztBQUVBLG9CQUFvQixPQUFPOztBQUUzQjtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsK0JBQStCOztBQUUvQixhQUFhOztBQUViOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE91dGxpbmVHZW9tZXRyeSAoIGdlb21ldHJ5LCB0aHJlc2hvbGRBbmdsZSApIHtcblxuICAgIGxldCBvdXRsaW5lID0gVEhSRUUuQnVmZmVyR2VvbWV0cnkoKTtcblxuICAgIHZhciB0aHJlc2hvbGREb3QgPSBNYXRoLmNvcyggTWF0aC5QSSAvIDE4MCAqIHRocmVzaG9sZEFuZ2xlICk7XG5cbiAgICB2YXIgZWRnZSA9IFsgMCwgMCBdLCBoYXNoID0ge30sIGksIGosIGwsIGZhY2UsIGtleTtcblxuICAgIGZ1bmN0aW9uIHNvcnRGdW5jdGlvbiggYSwgYiApIHtcblxuICAgICAgICByZXR1cm4gYSAtIGI7XG5cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IFsgJ2EnLCAnYicsICdjJyBdO1xuXG4gICAgdmFyIGdlb21ldHJ5MjtcblxuICAgIGlmICggZ2VvbWV0cnkuaXNCdWZmZXJHZW9tZXRyeSApIHtcblxuICAgICAgICBnZW9tZXRyeTIgPSBuZXcgVEhSRUUuR2VvbWV0cnkoKTtcbiAgICAgICAgZ2VvbWV0cnkyLmZyb21CdWZmZXJHZW9tZXRyeSggZ2VvbWV0cnkgKTtcblxuICAgIH0gZWxzZSB7XG5cbiAgICAgICAgZ2VvbWV0cnkyID0gZ2VvbWV0cnkuY2xvbmUoKTtcblxuICAgIH1cblxuICAgIGdlb21ldHJ5Mi5tZXJnZVZlcnRpY2VzKCk7XG4gICAgZ2VvbWV0cnkyLmNvbXB1dGVGYWNlTm9ybWFscygpO1xuXG4gICAgdmFyIHZlcnRpY2VzID0gZ2VvbWV0cnkyLnZlcnRpY2VzO1xuICAgIHZhciBmYWNlcyA9IGdlb21ldHJ5Mi5mYWNlcztcblxuICAgIGZvciAoIGkgPSAwOyBpIDwgZmFjZXMubGVuZ3RoOyBpICsrICkge1xuXG4gICAgICAgIGZhY2UgPSBmYWNlc1sgaSBdO1xuXG4gICAgICAgIGZvciAoIGogPSAwOyBqIDwgMzsgaiArKyApIHtcblxuICAgICAgICAgICAgZWRnZVsgMCBdID0gZmFjZVsga2V5c1sgaiBdIF07XG4gICAgICAgICAgICBlZGdlWyAxIF0gPSBmYWNlWyBrZXlzWyAoIGogKyAxICkgJSAzIF0gXTtcblxuICAgICAgICAgICAgdmFyIGxpbmUgPSBuZXcgVEhSRUUuTGluZTModmVydGljZXNbZWRnZVsgMCBdXSwgdmVydGljZXNbZWRnZVsgMSBdXSk7XG5cbiAgICAgICAgICAgIC8vIGZvciBlYWNoIHZlcnRleCBjaGVja3MgaWYgaXQgbGllcyBpbiB0aGUgZWRnZVxuICAgICAgICAgICAgZm9yICggdmFyIGUgPSB2ZXJ0aWNlcy5sZW5ndGggLSAxOyBlID49IDA7IGUgLS0gKSB7XG4gICAgICAgICAgICAgICAgaWYgKGUgPT09IGVkZ2VbIDAgXSB8fCBlID09PSBlZGdlWyAxIF0pIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIHZhciB2ID0gdmVydGljZXNbZV07XG4gICAgICAgICAgICAgICAgdmFyIGNsb3Nlc3RQb2ludCA9IGxpbmUuY2xvc2VzdFBvaW50VG9Qb2ludCh2LCB0cnVlKTtcbiAgICAgICAgICAgICAgICBpZiAoKG5ldyBUSFJFRS5MaW5lMyhjbG9zZXN0UG9pbnQsIHYpKS5kaXN0YW5jZSgpIDwgMWUtNSkgeyAvLzFlLTVcbiAgICAgICAgICAgICAgICAgICAgLy8gbWFyayB0aGUgY3VycmVudCBmYWNlIGFzIHNwbGl0dGVkIHNvIHRoYXQgaGlzIGNvcmRzIHdvbid0IGJlIGNvbnNpZGVyZWRcbiAgICAgICAgICAgICAgICAgICAgZmFjZS5zcGxpdHRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIC8vIEFkZCB0d28gbmV3IGZhY2VzLCBjcmVhdGVkIHNwbGl0dGluZyB0aGUgZmFjZSBpbiB0d29cbiAgICAgICAgICAgICAgICAgICAgZmFjZXMucHVzaChuZXcgVEhSRUUuRmFjZTMoXG4gICAgICAgICAgICAgICAgICAgICAgICBlLCBmYWNlWyBrZXlzWyAoIGogKyAyICkgJSAzIF0gXSwgZmFjZVsga2V5c1sgKCBqICkgJSAzIF0gXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhY2Uubm9ybWFsLCBmYWNlLmNvbG9yLCBmYWNlLm1hdGVyaWFsSW5kZXhcbiAgICAgICAgICAgICAgICAgICAgKSk7XG4gICAgICAgICAgICAgICAgICAgIGZhY2VzLnB1c2gobmV3IFRIUkVFLkZhY2UzKFxuICAgICAgICAgICAgICAgICAgICAgICAgZSwgZmFjZVsga2V5c1sgKCBqICsgMiApICUgMyBdIF0sIGZhY2VbIGtleXNbICggaiArIDEgKSAlIDMgXSBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmFjZS5ub3JtYWwsIGZhY2UuY29sb3IsIGZhY2UubWF0ZXJpYWxJbmRleFxuICAgICAgICAgICAgICAgICAgICApKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGZhY2Uuc3BsaXR0ZWQpIGJyZWFrO1xuXG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIGZvciAoIGkgPSBmYWNlcy5sZW5ndGggLSAxOyAgaSA+PSAwOyBpIC0tICkge1xuXG4gICAgICAgIGZhY2UgPSBmYWNlc1sgaSBdO1xuXG4gICAgICAgIGlmIChmYWNlLnNwbGl0dGVkKSBjb250aW51ZTtcblxuICAgICAgICBmb3IgKCBqID0gMDsgaiA8IDM7IGogKysgKSB7XG5cbiAgICAgICAgICAgIGVkZ2VbIDAgXSA9IGZhY2VbIGtleXNbIGogXSBdO1xuICAgICAgICAgICAgZWRnZVsgMSBdID0gZmFjZVsga2V5c1sgKCBqICsgMSApICUgMyBdIF07XG4gICAgICAgICAgICBlZGdlLnNvcnQoIHNvcnRGdW5jdGlvbiApO1xuXG4gICAgICAgICAgICBrZXkgPSBlZGdlLnRvU3RyaW5nKCk7XG5cbiAgICAgICAgICAgIGlmICggaGFzaFsga2V5IF0gPT09IHVuZGVmaW5lZCApIHtcblxuICAgICAgICAgICAgICAgIGhhc2hbIGtleSBdID0geyB2ZXJ0MTogZWRnZVsgMCBdLCB2ZXJ0MjogZWRnZVsgMSBdLCBmYWNlMTogaSwgZmFjZTI6IHVuZGVmaW5lZCB9O1xuXG4gICAgICAgICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgICAgICAgaGFzaFsga2V5IF0uZmFjZTIgPSBpO1xuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgdmFyIGNvb3JkcyA9IFtdO1xuXG4gICAgZm9yICgga2V5IGluIGhhc2ggKSB7XG5cbiAgICAgICAgdmFyIGggPSBoYXNoWyBrZXkgXTtcblxuICAgICAgICAvLyBBbiBlZGdlIGlzIG9ubHkgcmVuZGVyZWQgaWYgdGhlIGFuZ2xlIChpbiBkZWdyZWVzKSBiZXR3ZWVuIHRoZSBmYWNlIG5vcm1hbHMgb2YgdGhlIGFkam9pbmluZyBmYWNlcyBleGNlZWRzIHRoaXMgdmFsdWUuIGRlZmF1bHQgPSAxIGRlZ3JlZS5cbiAgICAgICAgaWYgKCBoLmZhY2UyICE9PSB1bmRlZmluZWQgJiYgZmFjZXNbIGguZmFjZTEgXS5ub3JtYWwuZG90KCBmYWNlc1sgaC5mYWNlMiBdLm5vcm1hbCApIDw9IHRocmVzaG9sZERvdCApIHtcblxuICAgICAgICAgICAgdmFyIHZlcnRleCA9IHZlcnRpY2VzWyBoLnZlcnQxIF07XG4gICAgICAgICAgICBjb29yZHMucHVzaCggdmVydGV4LnggKTtcbiAgICAgICAgICAgIGNvb3Jkcy5wdXNoKCB2ZXJ0ZXgueSApO1xuICAgICAgICAgICAgY29vcmRzLnB1c2goIHZlcnRleC56ICk7XG5cbiAgICAgICAgICAgIHZlcnRleCA9IHZlcnRpY2VzWyBoLnZlcnQyIF07XG4gICAgICAgICAgICBjb29yZHMucHVzaCggdmVydGV4LnggKTtcbiAgICAgICAgICAgIGNvb3Jkcy5wdXNoKCB2ZXJ0ZXgueSApO1xuICAgICAgICAgICAgY29vcmRzLnB1c2goIHZlcnRleC56ICk7XG5cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgb3V0bGluZS5hZGRBdHRyaWJ1dGUoICdwb3NpdGlvbicsIG5ldyBUSFJFRS5GbG9hdDMyQnVmZmVyQXR0cmlidXRlKCBjb29yZHMsIDMgKSApO1xuICAgIGNvbnNvbGUubG9nKG91dGxpbmUpO1xuICAgIHJldHVybiBvdXRsaW5lXG59O1xuXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3ZpZXdlci9zcmMvdGhyZWUuanMgLSB2aWV3ZXIvaW5pdC9PdXRsaW5lR2VvbWV0cnkuanNcbi8vIG1vZHVsZSBpZCA9IDZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n");

/***/ }),
/* 7 */
/***/ (function(module, exports) {

eval("module.exports = function() {\n  return new Worker(\"/js/dist/\" + \"ded468ab3c9d577685a9.worker.js\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2xvYWRlci9hc3NpbXAyanNvbi53b3JrZXIuanM/ZDMxOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBuZXcgV29ya2VyKFwiL2pzL2Rpc3QvXCIgKyBcImRlZDQ2OGFiM2M5ZDU3NzY4NWE5Lndvcmtlci5qc1wiKTtcbn07XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL2xvYWRlci9hc3NpbXAyanNvbi53b3JrZXIuanNcbi8vIG1vZHVsZSBpZCA9IDdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

eval("// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){ true?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3RhdHMuanMvYnVpbGQvc3RhdHMubWluLmpzP2ExZGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxlQUFlLHNGQUF1SSxrQkFBa0IsaUJBQWlCLGNBQWMscUJBQXFCLFNBQVMsY0FBYyxZQUFZLG9CQUFvQixxREFBcUQsSUFBSSx3Q0FBd0MsZ0NBQWdDLE1BQU0sT0FBTyxlQUFlLFlBQVksZUFBZSx1Q0FBdUM7QUFDbGYseUJBQXlCLEtBQUssbUhBQW1ILHNGQUFzRixLQUFLLE9BQU8sMERBQTBELDRCQUE0QixnQkFBZ0IsSUFBSSxnQ0FBZ0Msa0JBQWtCLG1EQUFtRCx5QkFBeUI7QUFDM2QsbUNBQW1DLFNBQVMsbUJBQW1CLGFBQWEsMEJBQTBCLHdCQUF3Qix3SkFBd0osVUFBVSxXQUFXLDRCQUE0QixhQUFhLHlCQUF5QixtREFBbUQscUJBQXFCLGNBQWMsb0JBQW9CLGNBQWM7QUFDcmUsb0JBQW9CLGNBQWMsaUJBQWlCLG9CQUFvQixPQUFPLDJCQUEyQixnQkFBZ0IsZ0JBQWdCLGNBQWMsZ0JBQWdCLG9CQUFvQixjQUFjLGtEQUFrRCxxQ0FBcUMsd0JBQXdCLGNBQWMsaUJBQWlCLHNDQUFzQyxTQUFTIiwiZmlsZSI6IjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdGF0cy5qcyAtIGh0dHA6Ly9naXRodWIuY29tL21yZG9vYi9zdGF0cy5qc1xuKGZ1bmN0aW9uKGYsZSl7XCJvYmplY3RcIj09PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz1lKCk6XCJmdW5jdGlvblwiPT09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6Zi5TdGF0cz1lKCl9KSh0aGlzLGZ1bmN0aW9uKCl7dmFyIGY9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGEpe2MuYXBwZW5kQ2hpbGQoYS5kb20pO3JldHVybiBhfWZ1bmN0aW9uIHUoYSl7Zm9yKHZhciBkPTA7ZDxjLmNoaWxkcmVuLmxlbmd0aDtkKyspYy5jaGlsZHJlbltkXS5zdHlsZS5kaXNwbGF5PWQ9PT1hP1wiYmxvY2tcIjpcIm5vbmVcIjtsPWF9dmFyIGw9MCxjPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7Yy5zdHlsZS5jc3NUZXh0PVwicG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowO2N1cnNvcjpwb2ludGVyO29wYWNpdHk6MC45O3otaW5kZXg6MTAwMDBcIjtjLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKGEpe2EucHJldmVudERlZmF1bHQoKTtcbnUoKytsJWMuY2hpbGRyZW4ubGVuZ3RoKX0sITEpO3ZhciBrPShwZXJmb3JtYW5jZXx8RGF0ZSkubm93KCksZz1rLGE9MCxyPWUobmV3IGYuUGFuZWwoXCJGUFNcIixcIiMwZmZcIixcIiMwMDJcIikpLGg9ZShuZXcgZi5QYW5lbChcIk1TXCIsXCIjMGYwXCIsXCIjMDIwXCIpKTtpZihzZWxmLnBlcmZvcm1hbmNlJiZzZWxmLnBlcmZvcm1hbmNlLm1lbW9yeSl2YXIgdD1lKG5ldyBmLlBhbmVsKFwiTUJcIixcIiNmMDhcIixcIiMyMDFcIikpO3UoMCk7cmV0dXJue1JFVklTSU9OOjE2LGRvbTpjLGFkZFBhbmVsOmUsc2hvd1BhbmVsOnUsYmVnaW46ZnVuY3Rpb24oKXtrPShwZXJmb3JtYW5jZXx8RGF0ZSkubm93KCl9LGVuZDpmdW5jdGlvbigpe2ErKzt2YXIgYz0ocGVyZm9ybWFuY2V8fERhdGUpLm5vdygpO2gudXBkYXRlKGMtaywyMDApO2lmKGM+ZysxRTMmJihyLnVwZGF0ZSgxRTMqYS8oYy1nKSwxMDApLGc9YyxhPTAsdCkpe3ZhciBkPXBlcmZvcm1hbmNlLm1lbW9yeTt0LnVwZGF0ZShkLnVzZWRKU0hlYXBTaXplL1xuMTA0ODU3NixkLmpzSGVhcFNpemVMaW1pdC8xMDQ4NTc2KX1yZXR1cm4gY30sdXBkYXRlOmZ1bmN0aW9uKCl7az10aGlzLmVuZCgpfSxkb21FbGVtZW50OmMsc2V0TW9kZTp1fX07Zi5QYW5lbD1mdW5jdGlvbihlLGYsbCl7dmFyIGM9SW5maW5pdHksaz0wLGc9TWF0aC5yb3VuZCxhPWcod2luZG93LmRldmljZVBpeGVsUmF0aW98fDEpLHI9ODAqYSxoPTQ4KmEsdD0zKmEsdj0yKmEsZD0zKmEsbT0xNSphLG49NzQqYSxwPTMwKmEscT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO3Eud2lkdGg9cjtxLmhlaWdodD1oO3Euc3R5bGUuY3NzVGV4dD1cIndpZHRoOjgwcHg7aGVpZ2h0OjQ4cHhcIjt2YXIgYj1xLmdldENvbnRleHQoXCIyZFwiKTtiLmZvbnQ9XCJib2xkIFwiKzkqYStcInB4IEhlbHZldGljYSxBcmlhbCxzYW5zLXNlcmlmXCI7Yi50ZXh0QmFzZWxpbmU9XCJ0b3BcIjtiLmZpbGxTdHlsZT1sO2IuZmlsbFJlY3QoMCwwLHIsaCk7Yi5maWxsU3R5bGU9ZjtiLmZpbGxUZXh0KGUsdCx2KTtcbmIuZmlsbFJlY3QoZCxtLG4scCk7Yi5maWxsU3R5bGU9bDtiLmdsb2JhbEFscGhhPS45O2IuZmlsbFJlY3QoZCxtLG4scCk7cmV0dXJue2RvbTpxLHVwZGF0ZTpmdW5jdGlvbihoLHcpe2M9TWF0aC5taW4oYyxoKTtrPU1hdGgubWF4KGssaCk7Yi5maWxsU3R5bGU9bDtiLmdsb2JhbEFscGhhPTE7Yi5maWxsUmVjdCgwLDAscixtKTtiLmZpbGxTdHlsZT1mO2IuZmlsbFRleHQoZyhoKStcIiBcIitlK1wiIChcIitnKGMpK1wiLVwiK2coaykrXCIpXCIsdCx2KTtiLmRyYXdJbWFnZShxLGQrYSxtLG4tYSxwLGQsbSxuLWEscCk7Yi5maWxsUmVjdChkK24tYSxtLGEscCk7Yi5maWxsU3R5bGU9bDtiLmdsb2JhbEFscGhhPS45O2IuZmlsbFJlY3QoZCtuLWEsbSxhLGcoKDEtaC93KSpwKSl9fX07cmV0dXJuIGZ9KTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL3N0YXRzLmpzL2J1aWxkL3N0YXRzLm1pbi5qc1xuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///8\n");

/***/ }),
/* 9 */
/***/ (function(module, exports) {

eval("module.exports = function() {\n  return new Worker(\"/js/dist/\" + \"e4c6ed858e1dafe5f4f1.worker.js\");\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi92aWV3ZXIvc3JjL3RocmVlLmpzIC0gdmlld2VyL3dvcmtlci9PdXRsaW5lR2VvbWV0cnkud29ya2VyLmpzP2I0ZTAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBIiwiZmlsZSI6IjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFdvcmtlcihcIi9qcy9kaXN0L1wiICsgXCJlNGM2ZWQ4NThlMWRhZmU1ZjRmMS53b3JrZXIuanNcIik7XG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vdmlld2VyL3NyYy90aHJlZS5qcyAtIHZpZXdlci93b3JrZXIvT3V0bGluZUdlb21ldHJ5Lndvcmtlci5qc1xuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9\n");

/***/ })
/******/ ]);